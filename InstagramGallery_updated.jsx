import React, { useState, useEffect } from 'react';

// Try to import the Instagram posts data
// This will be generated by the fetch_instagram.js script
let instagramPosts = [];
try {
  // Dynamic import to handle the case where the file might not exist yet
  instagramPosts = require('../data/instagram_posts.json');
} catch (error) {
  // If the file doesn't exist or has invalid JSON, we'll use placeholders
  console.warn('Instagram posts data not found or invalid. Using placeholders instead.');
  instagramPosts = [];
}

/**
 * InstagramGallery Component
 * 
 * Displays Instagram content in one of three ways:
 * 1. Using an embed code from a third-party service (if useEmbed=true and embedCode is provided)
 * 2. Using actual Instagram data fetched from the API (if available)
 * 3. Using placeholder images (fallback)
 * 
 * @param {Object} props Component props
 * @param {boolean} props.useEmbed Whether to use an embed code
 * @param {string} props.embedCode HTML embed code from a third-party service
 * @returns {JSX.Element} The rendered component
 */
const InstagramGallery = ({ useEmbed = false, embedCode = '' }) => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    // Simulate loading time and set posts
    const timer = setTimeout(() => {
      if (instagramPosts && instagramPosts.length > 0) {
        setPosts(instagramPosts);
      } else {
        // If no posts are available, we'll use placeholders
        setPosts([]);
      }
      setLoading(false);
    }, 500);

    return () => clearTimeout(timer);
  }, []);

  // If using embed code (from SnapWidget, LightWidget, etc.)
  if (useEmbed && embedCode) {
    return (
      <div className="w-full">
        <div dangerouslySetInnerHTML={{ __html: embedCode }} />
      </div>
    );
  }

  // Placeholder images to use if no Instagram data is available
  const placeholderImages = [
    '/assets/placeholder1.jpg',
    '/assets/placeholder2.jpg',
    '/assets/placeholder3.jpg',
    '/assets/placeholder4.jpg',
    '/assets/placeholder5.jpg',
    '/assets/placeholder6.jpg',
    '/assets/placeholder7.jpg',
    '/assets/placeholder8.jpg',
    '/assets/placeholder9.jpg',
  ];

  // Show loading state
  if (loading) {
    return (
      <div className="w-full text-center py-12">
        <div className="inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-accentGold"></div>
        <p className="mt-4 text-softText">Loading Instagram feed...</p>
      </div>
    );
  }

  // Show error state
  if (error) {
    return (
      <div className="w-full text-center py-12">
        <p className="text-red-400">Unable to load Instagram feed</p>
        <a 
          href="https://instagram.com/minzs_aesthetics" 
          target="_blank" 
          rel="noopener noreferrer"
          className="inline-block mt-4 bg-accentGold text-background px-6 py-3 rounded-md hover:bg-opacity-90"
        >
          View on Instagram Instead
        </a>
      </div>
    );
  }

  // Determine which images to display
  const hasRealPosts = posts && posts.length > 0;
  const displayItems = hasRealPosts ? posts.slice(0, 9) : placeholderImages.slice(0, 9);

  return (
    <div className="w-full">
      {/* Display a notice if using placeholder images */}
      {!hasRealPosts && (
        <div className="mb-6 p-3 bg-darkAccent border border-accentGold rounded-md text-softText text-sm">
          <p>
            <strong>Note:</strong> Currently displaying placeholder images. To show real Instagram content, 
            follow the instructions in <code>instagram_integration_instructions.txt</code>.
          </p>
        </div>
      )}

      {/* Instagram Grid */}
      <div className="grid grid-cols-3 gap-2 md:gap-4">
        {displayItems.map((item, index) => {
          // Handle different data structures for real posts vs placeholders
          const imageUrl = hasRealPosts ? item.mediaUrl : item;
          const postLink = hasRealPosts ? item.permalink : "https://instagram.com/minzs_aesthetics";
          const caption = hasRealPosts ? item.caption : "";
          
          return (
            <a 
              href={postLink}
              target="_blank" 
              rel="noopener noreferrer"
              key={index} 
              className="relative aspect-square overflow-hidden group"
            >
              <img 
                src={imageUrl} 
                alt={hasRealPosts ? `Instagram post: ${caption.substring(0, 30)}...` : `Instagram post ${index + 1}`} 
                className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                loading="lazy"
              />
              <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-opacity duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                <span className="text-white text-sm md:text-base font-medium">View on Instagram</span>
              </div>
            </a>
          );
        })}
      </div>

      {/* Follow Button */}
      <div className="mt-8 text-center">
        <a 
          href="https://instagram.com/minzs_aesthetics" 
          target="_blank" 
          rel="noopener noreferrer"
          className="inline-block bg-accentGold text-background px-6 py-3 rounded-md hover:bg-opacity-90"
        >
          Follow Us on Instagram
        </a>
      </div>

      {/* Last Updated Info (only show if using real posts) */}
      {hasRealPosts && (
        <div className="mt-4 text-center text-xs text-softText opacity-70">
          Last updated: {new Date(posts[0].timestamp).toLocaleDateString()}
        </div>
      )}
    </div>
  );
};

export default InstagramGallery;